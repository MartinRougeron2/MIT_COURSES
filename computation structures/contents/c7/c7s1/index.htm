<!DOCTYPE html><html lang="en">
      
      
        
    
    
    
    

      
      
      <head>
        <meta charset="utf-8">
        <meta name="format-detection" content="telephone=no">  
        
        <title>7.1 Annotated Slides | 7 Performance Measures | Computation Structures | Electrical Engineering and Computer Science | MIT OpenCourseWare</title>
    <!-- Begin Automatic Metadata Insertion -->
    <meta content="6-004-computation-structures-spring-2017" name="WT.cg_n">
    <meta content="7.1 Annotated Slides" name="WT.cg_s">
    <meta content="" name="Description">
    <meta content="Terman, Chris" name="Author">
    <meta content="6.004,computation,computation structure,primitives, gates,instructions,procedures,processes,concurrency,instruction set design,software structure,digital system,MOS transistor,logic gate,combinational circuit,sequential circuit,finite-state machines,computer architecture,programming,RISC processor,Computer Design and Engineering,Digital Systems" name="keywords">
    <meta content="6.004 Computation Structures | 7.1 Annotated Slides" name="Search_Display">
    <meta content="Computer Design and Engineering" itemprop="about">
    <meta content="Digital Systems" itemprop="about">
    <!-- End Automatic Metadata Insertion -->

	<link title="default" rel="stylesheet" type="text/css" href="../../../common/styles/grid.css">
<link title="default" rel="stylesheet" type="text/css" href="../../../common/styles/base.css">
<link title="default" rel="stylesheet" type="text/css" href="../../../common/styles/menu.css">
<link title="default" rel="stylesheet" type="text/css" href="../../../common/styles/jquery.bubblepopup.css">
<link title="default" rel="stylesheet" type="text/css" href="../../../common/styles/search.css">
<link title="default" rel="stylesheet" type="text/css" href="../../../common/styles/courses.css">
<link title="default" rel="stylesheet" type="text/css" href="../../../common/styles/courses_new.css">
	<link href="../../../common/xml/ocwcc.rdf" type="application/rdf+xml" rel="metadata">
	<link rel="canonical" href="https://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-004-computation-structures-spring-2017/c7/c7s1/">
	<link rel="apple-touch-icon" href="../../../common/images/apple-touch-icon.png">
	
	
      <script type="text/x-mathjax-config">
		MathJax.Hub.Config({
			TeX: { equationNumbers: { autoNumber: "AMS" } },		
	  		displayAlign: "left",
	  		displayIndent: "2em",
	  		menuSettings: {zoom: "Double-Click", mpContext: true, mpMouse: true},
			errorSettings: { message: ["[Math Error]"] }  		
			});
	</script>
	
	<script type="text/javascript" src="../../../common/scripts/jquery.js"></script>
	<script type="text/javascript" src="../../../common/scripts/ocw-media-utils-offline.js"></script>
	<script type="text/javascript" src="../../../common/scripts/ocw-offline.js"></script>
	<script type="text/javascript" src="../../../common/scripts/jquery.bubblepopup.min.js"></script>
	<script type="text/javascript" src="../../../common/scripts/expandy.js"></script>
	<script type="text/javascript" src="https://ocw.mit.edu//z-na.amazon-adsystem.com/widgets/onejs?MarketPlace=US&amp;adInstanceId=70ac07d7-b28f-4071-816f-d292aba4849f"></script>
	<script type="text/javascript" src="../../../common/scripts/bubble-popup-offline.js"></script>
	<script type="text/javascript" src="https://ocw.mit.edu//cdnjs.cloudflare.com/ajax/libs/mathjax/2.6.1/MathJax.js?config=TeX-MML-AM_SVG"></script>
	
	
	
    
    
    
    
    
    
    
      
       
		 

        
        
        

        
        
        
        
        
        
        
        
        
      </head>
    <body itemscope itemtype="http://schema.org/WebPage">
        
	

        <header id="top">
			<div id="grid">
				
				
					
<div id="portletwrapper-6f63772e746f70706f72746c65746d616e616765720a636f6e746578740a2f506c6f6e650a736974652d686561646572" class="portletWrapper kssattr-portlethash-6f63772e746f70706f72746c65746d616e616765720a636f6e746578740a2f506c6f6e650a736974652d686561646572">
<div class="portletStaticText portlet-static-site-header">
<!--googleoff: index-->
<div class="grid_6 alpha" id="banner"><a href="https://ocw.mit.edu/"><img src="../../../common/images/ocw_mast.png" class="logo" alt="MIT OpenCourseWare, Massachusetts Institute of Technology"></a></div>
<div class="grid_6 omega" id="subscribe">
<aside class="module" aria-label="Connect with OCW">
<table class="social">
    <tbody>
        <tr>
            <td class="socialbutton"><a aria-label="Subscribe to the OCW Newsletter" href="https://ocw.mit.edu/subscribe/index.htm?utm_source=header"><img src="../../../common/images/trans.gif" alt="An icon depicting an envelope.">Subscribe to the OCW Newsletter</a></td>
            <td>
<a aria-label="Facebook" href="https://facebook.com/mitocw"><img src="../../../common/images/icon_fb.png" alt="Click to visit our Facebook page."></a>  <a aria-label="Instagram" href="https://www.instagram.com/mitocw/"><img src="https://ocw.mit.edu/images/icon_ig.png" alt="Click to visit our Instagram page."></a> <a aria-label="Twitter" href="https://twitter.com/mitocw"><img src="https://ocw.mit.edu/images/icon_twitter.png" alt="Click to visit our Twitter feed."></a><a aria-label="YouTube" href="https://www.youtube.com/mitocw" style="font-size: 12.208px;"><img src="https://ocw.mit.edu/images/icon_yt.png" alt="Click to visit our YouTube page."></a><span style="font-size: 12.208px;">   </span><a aria-label="Open Matters blog on WordPress" href="https://www.ocw-openmatters.org/" style="font-size: 12.208px;"><img src="https://ocw.mit.edu/images/icon_wp.png" alt="Click to visit our blog on WordPress."></a>
</td>
        </tr>
    </tbody>
</table>
</aside><nav aria-label="Help Links" class="helplinks">     <a aria-label="OCW Site Help" href="https://ocw.mit.edu/help">Help</a><span aria-hidden="true">|</span>     <a href="../../../common/about/contactus.htm">Contact Us</a>   </nav>
</div>
<div class="clear"> </div>
<!--googleon: index-->
</div>

</div>

<div id="portletwrapper-6f63772e746f70706f72746c65746d616e616765720a636f6e746578740a2f506c6f6e650a6d6567612d6d656e75" class="portletWrapper kssattr-portlethash-6f63772e746f70706f72746c65746d616e616765720a636f6e746578740a2f506c6f6e650a6d6567612d6d656e75">
<div class="portletStaticText portlet-static-mega-menu"><div><nav id="mega" class="grid_8 alpha" aria-label="Site">
<ul id="menu" role="presentation">
    <li id="menu_home">
<a href="https://ocw.mit.edu/" aria-label="Homepage"><img src="../../../common/images/top-nav_home.png" class="home_icon" alt="Click for site home page."></a><!-- Begin Home Item -->
</li>
    <!-- End Home Item -->
    <li id="drop_1" aria-label="Find Courses">
<a href="#" aria-hidden="true">FIND COURSES</a><!-- Begin 5 columns Item -->
    <div class="dropdown_5columns-a mega-courses">
    <div class="col_1a">
    <div class="row_1a">
<nav aria-labelledby="mm-find-courses-by">     <span id="mm-find-courses-by" class="nav" aria-hidden="true">Find courses by:</span>
    <ul class="find_by" role="presentation">
        <li><a href="https://ocw.mit.edu/courses/find-by-topic/">Topic</a></li>
        <li><a href="https://ocw.mit.edu/courses/find-by-number/">MIT Course Number</a></li>
        <li><a href="https://ocw.mit.edu/courses/find-by-department/">Department</a></li>
    </ul>
    </nav>     <nav aria-labelledby="mm-collections">     <span id="mm-collections" class="nav" aria-hidden="true">Collections</span>
    <ul role="presentation">
        <li><a href="https://ocw.mit.edu/courses/new-courses/">New Courses</a></li>
        <li><a href="https://ocw.mit.edu/courses/most-visited-courses/">Most Visited Courses</a></li>
        <li><a href="https://ocw.mit.edu/courses/ocw-scholar/">OCW Scholar Courses</a></li>
        <li><a href="https://ocw.mit.edu/courses/audio-video-courses/">Audio/Video Lectures</a></li>
        <li><a href="https://ocw.mit.edu/courses/online-textbooks/">Online Textbooks</a></li>
        <li><a href="https://ocw.mit.edu/resources/">Supplemental Resources</a></li>
        <li><a href="https://ocw.mit.edu/high-school/">OCW Highlights for High School</a></li>
        <li><a href="https://ocw.mit.edu/courses/mitx-related-courseware/">MITx &amp; Related OCW Courses</a></li>
        <li><a href="https://ocw.mit.edu/courses/mit-open-learning-library/">MIT Open Learning Library</a></li>
    </ul>
    </nav>     <nav class="col_1b" aria-labelledby="mm-translated-courses">     <span id="mm-translated-courses" class="nav" aria-hidden="true" style="line-height: 1.3;">Cross-Disciplinary Topic Lists</span>
    <ul role="presentation">
        <li><a href="https://ocw.mit.edu/courses/energy-courses">Energy</a></li>
        <li><a href="https://ocw.mit.edu/courses/entrepreneurship">Entrepreneurship</a></li>
        <li><a href="https://ocw.mit.edu/courses/environment-courses">Environment</a></li>
        <li><a href="https://ocw.mit.edu/courses/intro-programming">Introductory Programming</a></li>
        <li><a href="https://ocw.mit.edu/courses/life-sciences">Life Sciences</a></li>
        <li><a href="https://ocw.mit.edu/courses/transportation-courses">Transportation</a></li>
    </ul>
    </nav>
</div>
    <div class="row_1b"><nav aria-labelledby="mm-cross-disciplinary-topic-lists">     <span id="mm-cross-disciplinary-topic-lists" class="nav" aria-hidden="true">Translated Courses</span>
    <ul role="presentation">
        <li><a href="https://ocw.mit.edu/courses/translated-courses/traditional-chinese" aria-label="Traditional Chinese">繁體字 / Traditional Chinese</a></li>
        <li><a href="https://ocw.mit.edu/courses/translated-courses/turkish" aria-label="Turkish">Türkçe / Turkish</a></li>
        <li><a href="https://ocw.mit.edu/courses/translated-courses/korean" aria-label="Korean">(비디오)한국 / Korean</a></li>
    </ul>
    </nav></div>
    </div>
    </div>
    </li>
    <li id="drop_2">
<a href="#" aria-label="For Educators">For Educators</a>
    <div class="dropdown_1column-a" style="width: 270px;"><nav aria-labelledby="mm-find-courses-by">
    <ul role="presentation">
        <li><a href="https://ocw.mit.edu/educator/chalk-radio-podcast">Chalk Radio Podcast</a></li>
        <li><a href="https://ocw.mit.edu/educator/">OCW Educator Portal</a></li>
    </ul>
    <ul role="presentation">
        <li><a href="https://ocw.mit.edu/courses/instructor-insights/">Instructor Insights by Department</a></li>
        <li><a href="https://openlearning.mit.edu/campus/digital-innovations/">Residential Digital Innovations </a></li>
    </ul>
    <ul role="presentation">
        <li><a href="https://ocw.mit.edu/high-school/">OCW Highlights for High School</a></li>
    </ul>
    <ul role="presentation">
        <li><a href="https://ocw.mit.edu/educator/additional-resources/">Additional Resources</a></li>
    </ul>
    </nav></div>
    </li>
    <li id="drop_3">
<a href="#" aria-hidden="true">Give Now</a>
    <div class="dropdown_1column-a"><nav class="col_1" aria-label="Donate">
    <ul role="presentation">
        <li><a href="https://ocw.mit.edu/give/">Make a Donation</a></li>
        <li><a href="https://ocw.mit.edu/give/why-give/">Why Give?</a></li>
        <li><a href="https://ocw.mit.edu/give/our-supporters/">Our Supporters</a></li>
        <li><a href="https://ocw.mit.edu/give/other-ways-to-contribute/">Other Ways to Contribute</a></li>
        <li><a href="https://ocw.mit.edu/support/">Become a Corporate Sponsor</a></li>
    </ul>
    </nav></div>
    </li>
    <li id="drop_4">
<a href="#" aria-hidden="true">About</a>
    <div class="dropdown_1column-a"><nav class="col_1" aria-label="About">
    <ul role="presentation">
        <li><a href="https://ocw.mit.edu/about/">About MIT OpenCourseWare</a></li>
        <li><a href="https://ocw.mit.edu/about/site-statistics/">Site Statistics</a></li>
        <li><a href="https://ocw.mit.edu/about/ocw-stories/">OCW Stories</a></li>
        <li><a href="https://ocw.mit.edu/about/newsletter/">Newsletter</a></li>
        <li><a href="https://chalk-radio.simplecast.com/">Chalk Radio Podcast</a></li>
        <li><a href="https://www.ocw-openmatters.org/">Open Matters Blog</a></li>
    </ul>
    </nav></div>
    </li>
</ul>
</nav></div></div>

</div>





<!--googleoff: index-->
<script>
  (function() {
	var cx = '012626166551961672889:owjdpuboktq';
	var gcse = document.createElement('script');
	gcse.type = 'text/javascript';
	gcse.async = true;
	gcse.src = 'https://cse.google.com/cse.js?cx=' + cx;
	var s = document.getElementsByTagName('script')[0];
	s.parentNode.insertBefore(gcse, s);
  })();
  window.onload = function(){
	document.getElementById('gsc-i-id1').placeholder = 'Search';	
  };

$(document).ready(function(){

$('.advanceSearch a').keydown(function(event){showSearchTips($(this),event);})
$('#searchTipsModal').keydown(function(event){showSearchTips($(this),event);})

function showSearchTips(obj,evt) {
// if pressed enter key
	if ( evt.which == 13 || evt.which == 32) {
		showModal();
		ga('send', 'pageview', "AdvanceSearch");
		$(".advanceSearch a").attr('aria-expanded', 'true');
		$('.searchTipsModal').focus();
		evt.preventDefault();
		}
	if ( evt.which == 27 ) {
		hideModal();
		$(".advanceSearch a").attr('aria-expanded', 'false');
		var modal = document.getElementById('searchTipsModal');
		modal.style.display = "none";
		$(".advanceSearch a").focus();
		evt.preventDefault();
		}
}

});
function showModal(){
	var modal = document.getElementById('searchTipsModal');
	modal.style.display = "block";
	ga('send', 'pageview', "AdvanceSearch");
	document.getElementById("searchTipsBtn").setAttribute("aria-expanded", true);
	window.setTimeout(function () {
    document.getElementById('searchTipsModal').focus(); }, 0);
}

function hideModal(){
	var modal = document.getElementById('searchTipsModal');
	modal.style.display = "none";
	document.getElementById("searchTipsBtn").setAttribute("aria-expanded", false);
}
</script>
<div id="search" role="search" class="grid_4 omega">
    	<table class="search">
				<tbody>
					<tr>
						<td><div class="searchboxheader"><searchbox-only resultsurl="/search/ocwsearch.htm"></searchbox-only></div></td>
						<td>
							<div class="advanceSearch">
								<a id="searchTipsBtn" onclick="showModal();" href="#" role="button" aria-label="search tips" aria-expanded="false" aria-describedby="searchtips">Search Tips</a>

								<!-- The Modal -->
								<div id="searchTipsModal" class="modal" tabindex="-1">
								  <!-- Modal content -->
									<div class="modal-content">
										<div class="modal-body">
											<button class="close" onclick="hideModal();" aria-label="close">X</button>
											<span>
												<b>Exclude words from your search</b>
												<br>Put - in front of a word you want to leave out. For example, jaguar speed -car
												<br><br>
												<b>Search for an exact match</b>
												<br>Put a word or phrase inside quotes. For example, "tallest building".
												<br><br>
												<b>Search for wildcards or unknown words</b>
												<br>Put a * in your word or phrase where you want to leave a placeholder. For example, "largest * in the world".
												<br><br>
												<b>Search within a range of numbers</b>
												<br>Put .. between two numbers. For example, camera $50..$100.
												<br><br>
												<b>Combine searches</b>
												<br>Put "OR" between each search query. For example,  marathon OR race.
												<br><br>
											</span>
										</div>
								  </div>
								</div>
							</div>
						</td>
					</tr>
				</tbody>
		</table>
</div>
<div class="clear"></div>
<!--googleon: index-->
<!-- *end header* -->

				
				
			</div>
<!-- top grid end -->
		</header><!-- top end -->
			
		<div id="center">
         <div id="grid">
		         <div id="left-section">
                 <nav aria-label="Breadcrumb" id="breadcrumb">
                      <p>

    <a href="https://ocw.mit.edu/">Home</a>
    
        »
        
    
    
        
            <a href="https://ocw.mit.edu/courses">Courses</a>
            
                »
                
            
            
         
    
    
        
            <a href="https://ocw.mit.edu/courses/electrical-engineering-and-computer-science">Electrical Engineering and Computer Science</a>
            
                »
                
            
            
         
    
    
        
            <a href="../../../contents/index.htm">Computation Structures</a>
            
                »
                
            
            
         
    
    
        
            <a href="../../../contents/c7/index.htm">7 Performance Measures</a>
            
                »
                
            
            
         
    
    
        
            
            
            7.1 Annotated Slides
         
    
</p>

                 </nav>
                 <div class="clear"></div>
                   <div id="section_title">
           			     <h1 class="title" itemprop="name" property="dct:title">
        <span class="" id="parent-fieldname-title">
            7.1 Annotated Slides
        </span>
    </h1>
             	     </div>
             	     <div class="clear"></div>
             	     <div id="course_wrapper_section">
           	     	 <nav id="course_nav" aria-label="Course">
               			 



<script language="javascript" type="text/javascript">
function toggleMenu(objID) {
  if (!document.getElementById) return;
  var ob = document.getElementById(objID);
  ob.className = (ob.className == 'selected')?'': 'selected';
}
function toggleClass(id)
{
  var divtoggleClass= document.getElementById(id);
  divtoggleClass.className = (divtoggleClass.className == 'mO')?'mC': 'mO';
  return false;
}
function changeAlt(id)
{
  id.alt = (id.alt == 'Expand Menu')?'Collapse Menu' : 'Expand Menu';
  id.title = (id.title == 'Expand Menu')?'Collapse Menu' : 'Expand Menu';
}
</script>
<!--Left Nav Starts -->


	<ul>			  
	
	    	
	    	    <li class="">
			   			<a href="../../../contents/index.htm">
		                  Course Home  			                
	                    </a>
		        </li>
		    
         	
	
	
	    	
	    	    <li class="">
			   			<a href="../../../contents/syllabus/index.htm">
		                  Syllabus  			                
	                    </a>
		        </li>
		    
         	
	
	
	    	
	    	    <li class="">
			   			<a href="../../../contents/calendar/index.htm">
		                  Calendar  			                
	                    </a>
		        </li>
		    
         	
	
	
	    	
         	<li class="">
       		<div class="tlp_links">
	        	<div id="instructor-insights" class="mO">
						<a href="#" class="" onclick="toggleMenu('menuinstructor-insights'); toggleClass('instructor-insights'); return false">
		                  <img src="../../../common/images/trans.gif" class="expandCollapseTrans" border="0" width="10" height="12" onclick="changeAlt(this)" alt="Expand Menu" title="Expand Menu">
		                </a>
		                <a href="../../../contents/instructor-insights/index.htm" class="">
		                  Instructor Insights  			                
	                    </a>
	                 			                
	            </div>
			    
	        	<ul id="menuinstructor-insights" class="">
					               
		            <li class="">
				 		<a href="../../../contents/instructor-insights/an-interview-with-christopher-terman-on-teaching-computation-structures/index.htm" class="">An Interview with Christopher Terman</a>
		            </li>
		            <li class="">
				 		<a href="../../../contents/instructor-insights/meet-the-educator/index.htm" class="">Meet the Educator</a>
		            </li>
		            <li class="">
				 		<a href="../../../contents/instructor-insights/when-students-come-with-different-backgrounds-offer-a-buffet-of-learning-materials/index.htm" class="">A Buffet of Learning Materials</a>
		            </li>
		            <li class="">
				 		<a href="../../../contents/instructor-insights/using-the-mitx-platform-to-structure-learning-sequences/index.htm" class="">Using the MITx Platform</a>
		            </li>
		            <li class="">
				 		<a href="../../../contents/instructor-insights/conceptualizing-online-courses-as-educational-labs/index.htm" class="">Online Courses as Educational Labs</a>
		            </li>
		            <li class="">
				 		<a href="../../../contents/instructor-insights/teaching-large-lecture-classes-the-importance-of-stories-and-disfluency/index.htm" class="">The Importance of Stories and Disfluency</a>
		            </li>
		            <li class="">
				 		<a href="../../../contents/instructor-insights/the-teaching-team-from-lab-assistants-to-faculty-members-the-range-of-experience-is-key/index.htm" class="">A Teaching Team with a Range of Experience</a>
		            </li>
		            <li class="">
				 		<a href="../../../contents/instructor-insights/with-online-fora-being-stuck-is-just-a-10-minute-process/index.htm" class="">Being Stuck Is a 10-Minute Process</a>
		            </li>
		            <li class="">
				 		<a href="../../../contents/instructor-insights/using-browser-based-programming-environments-to-engage-students-in-the-practice-of-engineering/index.htm" class="">Browser-Based Programming Environments</a>
		            </li>
		            <li class="">
				 		<a href="../../../contents/instructor-insights/a-common-challenge-students-face-developing-confidence-in-systematically-solving-problems/index.htm" class="">Confidence in Problem-Solving</a>
		            </li>
		            <li class="">
				 		<a href="../../../contents/instructor-insights/hallway-learning-the-value-of-common-learning-experiences-at-the-undergraduate-level/index.htm" class="">The Value of Common Experiences</a>
		            </li>
		            <li class="">
				 		<a href="../../../contents/instructor-insights/the-fun-is-in-the-doing-of-the-puzzle-self-paced-mastery-learning-and-moving-beyond/index.htm" class="">Self-Paced Mastery Learning</a>
		            </li>
		            <li class="">
				 		<a href="../../../contents/instructor-insights/engineering-learning-materials-an-iterative-process/index.htm" class="">Engineering Learning Materials</a>
		            </li>
			    </ul>
			    
			</div>
			</li>
	
	
	    	
         	<li class="">
       		<div class="tlp_links">
	        	<div id="c1" class="mO">
						<a href="#" class="" onclick="toggleMenu('menuc1'); toggleClass('c1'); return false">
		                  <img src="../../../common/images/trans.gif" class="expandCollapseTrans" border="0" width="10" height="12" onclick="changeAlt(this)" alt="Expand Menu" title="Expand Menu">
		                </a>
		                <a href="../../../contents/c1/index.htm" class="">
		                  1 Basics of Information  			                
	                    </a>
	                 			                
	            </div>
			    
	        	<ul id="menuc1" class="">
					               
		            <li class="">
				 		<a href="../../../contents/c1/c1s1/index.htm" class="">1.1 Annotated Slides</a>
		            </li>
		            <li class="">
				 		<a href="../../../contents/c1/c1s2/index.htm" class="">1.2 Topic Videos</a>
		            </li>
		            <li class="">
				 		<a href="../../../contents/c1/c1s3/index.htm" class="">1.3 Worksheet</a>
		            </li>
			    </ul>
			    
			</div>
			</li>
	
	
	    	
         	<li class="">
       		<div class="tlp_links">
	        	<div id="c2" class="mO">
						<a href="#" class="" onclick="toggleMenu('menuc2'); toggleClass('c2'); return false">
		                  <img src="../../../common/images/trans.gif" class="expandCollapseTrans" border="0" width="10" height="12" onclick="changeAlt(this)" alt="Expand Menu" title="Expand Menu">
		                </a>
		                <a href="../../../contents/c2/index.htm" class="">
		                  2 The Digital Abstraction  			                
	                    </a>
	                 			                
	            </div>
			    
	        	<ul id="menuc2" class="">
					               
		            <li class="">
				 		<a href="../../../contents/c2/c2s1/index.htm" class="">2.1 Annotated Slides</a>
		            </li>
		            <li class="">
				 		<a href="../../../contents/c2/c2s2/index.htm" class="">2.2 Topic Videos</a>
		            </li>
		            <li class="">
				 		<a href="../../../contents/c2/c2s3/index.htm" class="">2.3 Worksheet</a>
		            </li>
			    </ul>
			    
			</div>
			</li>
	
	
	    	
         	<li class="">
       		<div class="tlp_links">
	        	<div id="c3" class="mO">
						<a href="#" class="" onclick="toggleMenu('menuc3'); toggleClass('c3'); return false">
		                  <img src="../../../common/images/trans.gif" class="expandCollapseTrans" border="0" width="10" height="12" onclick="changeAlt(this)" alt="Expand Menu" title="Expand Menu">
		                </a>
		                <a href="../../../contents/c3/index.htm" class="">
		                  3 CMOS  			                
	                    </a>
	                 			                
	            </div>
			    
	        	<ul id="menuc3" class="">
					               
		            <li class="">
				 		<a href="../../../contents/c3/c3s1/index.htm" class="">3.1 Annotated Slides</a>
		            </li>
		            <li class="">
				 		<a href="../../../contents/c3/c3s2/index.htm" class="">3.2 Topic Videos</a>
		            </li>
		            <li class="">
				 		<a href="../../../contents/c3/c3s3/index.htm" class="">3.3 Worksheet</a>
		            </li>
			    </ul>
			    
			</div>
			</li>
	
	
	    	
         	<li class="">
       		<div class="tlp_links">
	        	<div id="c4" class="mO">
						<a href="#" class="" onclick="toggleMenu('menuc4'); toggleClass('c4'); return false">
		                  <img src="../../../common/images/trans.gif" class="expandCollapseTrans" border="0" width="10" height="12" onclick="changeAlt(this)" alt="Expand Menu" title="Expand Menu">
		                </a>
		                <a href="../../../contents/c4/index.htm" class="">
		                  4 Combinational Logic  			                
	                    </a>
	                 			                
	            </div>
			    
	        	<ul id="menuc4" class="">
					               
		            <li class="">
				 		<a href="../../../contents/c4/c4s1/index.htm" class="">4.1 Annotated Slides</a>
		            </li>
		            <li class="">
				 		<a href="../../../contents/c4/c4s2/index.htm" class="">4.2 Topic Videos</a>
		            </li>
		            <li class="">
				 		<a href="../../../contents/c4/c4s3/index.htm" class="">4.3 Worksheet</a>
		            </li>
			    </ul>
			    
			</div>
			</li>
	
	
	    	
         	<li class="">
       		<div class="tlp_links">
	        	<div id="c5" class="mO">
						<a href="#" class="" onclick="toggleMenu('menuc5'); toggleClass('c5'); return false">
		                  <img src="../../../common/images/trans.gif" class="expandCollapseTrans" border="0" width="10" height="12" onclick="changeAlt(this)" alt="Expand Menu" title="Expand Menu">
		                </a>
		                <a href="../../../contents/c5/index.htm" class="">
		                  5 Sequential Logic  			                
	                    </a>
	                 			                
	            </div>
			    
	        	<ul id="menuc5" class="">
					               
		            <li class="">
				 		<a href="../../../contents/c5/c5s1/index.htm" class="">5.1 Annotated Slides</a>
		            </li>
		            <li class="">
				 		<a href="../../../contents/c5/c5s2/index.htm" class="">5.2 Topic Videos</a>
		            </li>
		            <li class="">
				 		<a href="../../../contents/c5/c5s3/index.htm" class="">5.3 Worksheet</a>
		            </li>
			    </ul>
			    
			</div>
			</li>
	
	
	    	
         	<li class="">
       		<div class="tlp_links">
	        	<div id="c6" class="mO">
						<a href="#" class="" onclick="toggleMenu('menuc6'); toggleClass('c6'); return false">
		                  <img src="../../../common/images/trans.gif" class="expandCollapseTrans" border="0" width="10" height="12" onclick="changeAlt(this)" alt="Expand Menu" title="Expand Menu">
		                </a>
		                <a href="../../../contents/c6/index.htm" class="">
		                  6 Finite State Machines  			                
	                    </a>
	                 			                
	            </div>
			    
	        	<ul id="menuc6" class="">
					               
		            <li class="">
				 		<a href="../../../contents/c6/c6s1/index.htm" class="">6.1 Annotated Slides</a>
		            </li>
		            <li class="">
				 		<a href="../../../contents/c6/c6s2/index.htm" class="">6.2 Topic Videos</a>
		            </li>
		            <li class="">
				 		<a href="../../../contents/c6/c6s3/index.htm" class="">6.3 Worksheet</a>
		            </li>
			    </ul>
			    
			</div>
			</li>
	
	
	    	
         	<li class="">
       		<div class="tlp_links">
	        	<div id="c7" class="mC">
						<a href="#" class="" onclick="toggleMenu('menuc7'); toggleClass('c7'); return false">
		                  <img src="../../../common/images/trans.gif" class="expandCollapseTrans" border="0" width="10" height="12" onclick="changeAlt(this)" alt="Collapse Menu" title="Collapse Menu">
		                </a>
		                <a href="../../../contents/c7/index.htm" class="">
		                  7 Performance Measures  			                
	                    </a>
	                 			                
	            </div>
			    
	        	<ul id="menuc7" class="selected">
					               
		            <li class="selected">
				 		<a href="../../../contents/c7/c7s1/index.htm" class="selected">7.1 Annotated Slides</a>
		            </li>
		            <li class="">
				 		<a href="../../../contents/c7/c7s2/index.htm" class="">7.2 Topic Videos</a>
		            </li>
		            <li class="">
				 		<a href="../../../contents/c7/c7s3/index.htm" class="">7.3 Worksheet</a>
		            </li>
			    </ul>
			    
			</div>
			</li>
	
	
	    	
         	<li class="">
       		<div class="tlp_links">
	        	<div id="c8" class="mO">
						<a href="#" class="" onclick="toggleMenu('menuc8'); toggleClass('c8'); return false">
		                  <img src="../../../common/images/trans.gif" class="expandCollapseTrans" border="0" width="10" height="12" onclick="changeAlt(this)" alt="Expand Menu" title="Expand Menu">
		                </a>
		                <a href="../../../contents/c8/index.htm" class="">
		                  8 Design Tradeoffs  			                
	                    </a>
	                 			                
	            </div>
			    
	        	<ul id="menuc8" class="">
					               
		            <li class="">
				 		<a href="../../../contents/c8/c8s1/index.htm" class="">8.1 Annotated Slides</a>
		            </li>
		            <li class="">
				 		<a href="../../../contents/c8/c8s2/index.htm" class="">8.2 Topic Videos</a>
		            </li>
			    </ul>
			    
			</div>
			</li>
	
	
	    	
         	<li class="">
       		<div class="tlp_links">
	        	<div id="c9" class="mO">
						<a href="#" class="" onclick="toggleMenu('menuc9'); toggleClass('c9'); return false">
		                  <img src="../../../common/images/trans.gif" class="expandCollapseTrans" border="0" width="10" height="12" onclick="changeAlt(this)" alt="Expand Menu" title="Expand Menu">
		                </a>
		                <a href="../../../contents/c9/index.htm" class="">
		                  9 Designing an Instruction Set  			                
	                    </a>
	                 			                
	            </div>
			    
	        	<ul id="menuc9" class="">
					               
		            <li class="">
				 		<a href="../../../contents/c9/c9s1/index.htm" class="">9.1 Annotated Slides</a>
		            </li>
		            <li class="">
				 		<a href="../../../contents/c9/c9s2/index.htm" class="">9.2 Topic Videos</a>
		            </li>
		            <li class="">
				 		<a href="../../../contents/c9/c9s3/index.htm" class="">9.3 Worksheet</a>
		            </li>
			    </ul>
			    
			</div>
			</li>
	
	
	    	
         	<li class="">
       		<div class="tlp_links">
	        	<div id="c10" class="mO">
						<a href="#" class="" onclick="toggleMenu('menuc10'); toggleClass('c10'); return false">
		                  <img src="../../../common/images/trans.gif" class="expandCollapseTrans" border="0" width="10" height="12" onclick="changeAlt(this)" alt="Expand Menu" title="Expand Menu">
		                </a>
		                <a href="../../../contents/c10/index.htm" class="">
		                  10 Assembly Language, Models of Computation  			                
	                    </a>
	                 			                
	            </div>
			    
	        	<ul id="menuc10" class="">
					               
		            <li class="">
				 		<a href="../../../contents/c10/c10s1/index.htm" class="">10.1 Annotated Slides</a>
		            </li>
		            <li class="">
				 		<a href="../../../contents/c10/c10s2/index.htm" class="">10.2 Topic Videos</a>
		            </li>
			    </ul>
			    
			</div>
			</li>
	
	
	    	
         	<li class="">
       		<div class="tlp_links">
	        	<div id="c11" class="mO">
						<a href="#" class="" onclick="toggleMenu('menuc11'); toggleClass('c11'); return false">
		                  <img src="../../../common/images/trans.gif" class="expandCollapseTrans" border="0" width="10" height="12" onclick="changeAlt(this)" alt="Expand Menu" title="Expand Menu">
		                </a>
		                <a href="../../../contents/c11/index.htm" class="">
		                  11 Compilers  			                
	                    </a>
	                 			                
	            </div>
			    
	        	<ul id="menuc11" class="">
					               
		            <li class="">
				 		<a href="../../../contents/c11/c11s1/index.htm" class="">11.1 Annotated Slides</a>
		            </li>
		            <li class="">
				 		<a href="../../../contents/c11/c11s2/index.htm" class="">11.2 Topic Videos</a>
		            </li>
		            <li class="">
				 		<a href="../../../contents/c11/c11s3/index.htm" class="">11.3 Worksheet</a>
		            </li>
			    </ul>
			    
			</div>
			</li>
	
	
	    	
         	<li class="">
       		<div class="tlp_links">
	        	<div id="c12" class="mO">
						<a href="#" class="" onclick="toggleMenu('menuc12'); toggleClass('c12'); return false">
		                  <img src="../../../common/images/trans.gif" class="expandCollapseTrans" border="0" width="10" height="12" onclick="changeAlt(this)" alt="Expand Menu" title="Expand Menu">
		                </a>
		                <a href="../../../contents/c12/index.htm" class="">
		                  12 Procedures and Stacks  			                
	                    </a>
	                 			                
	            </div>
			    
	        	<ul id="menuc12" class="">
					               
		            <li class="">
				 		<a href="../../../contents/c12/c12s1/index.htm" class="">12.1 Annotated Slides</a>
		            </li>
		            <li class="">
				 		<a href="../../../contents/c12/c12s2/index.htm" class="">12.2 Topic Videos</a>
		            </li>
		            <li class="">
				 		<a href="../../../contents/c12/c12s3/index.htm" class="">12.3 Worksheet</a>
		            </li>
			    </ul>
			    
			</div>
			</li>
	
	
	    	
         	<li class="">
       		<div class="tlp_links">
	        	<div id="c13" class="mO">
						<a href="#" class="" onclick="toggleMenu('menuc13'); toggleClass('c13'); return false">
		                  <img src="../../../common/images/trans.gif" class="expandCollapseTrans" border="0" width="10" height="12" onclick="changeAlt(this)" alt="Expand Menu" title="Expand Menu">
		                </a>
		                <a href="../../../contents/c13/index.htm" class="">
		                  13 Building the Beta  			                
	                    </a>
	                 			                
	            </div>
			    
	        	<ul id="menuc13" class="">
					               
		            <li class="">
				 		<a href="../../../contents/c13/c13s1/index.htm" class="">13.1 Annotated Slides</a>
		            </li>
		            <li class="">
				 		<a href="../../../contents/c13/c13s2/index.htm" class="">13.2 Topic Videos</a>
		            </li>
		            <li class="">
				 		<a href="../../../contents/c13/c13s3/index.htm" class="">13.3 Worksheet</a>
		            </li>
			    </ul>
			    
			</div>
			</li>
	
	
	    	
         	<li class="">
       		<div class="tlp_links">
	        	<div id="c14" class="mO">
						<a href="#" class="" onclick="toggleMenu('menuc14'); toggleClass('c14'); return false">
		                  <img src="../../../common/images/trans.gif" class="expandCollapseTrans" border="0" width="10" height="12" onclick="changeAlt(this)" alt="Expand Menu" title="Expand Menu">
		                </a>
		                <a href="../../../contents/c14/index.htm" class="">
		                  14 Caches and the Memory Hierarchy  			                
	                    </a>
	                 			                
	            </div>
			    
	        	<ul id="menuc14" class="">
					               
		            <li class="">
				 		<a href="../../../contents/c14/c14s1/index.htm" class="">14.1 Annotated Slides</a>
		            </li>
		            <li class="">
				 		<a href="../../../contents/c14/c14s2/index.htm" class="">14.2 Topic Videos</a>
		            </li>
		            <li class="">
				 		<a href="../../../contents/c14/c14s3/index.htm" class="">14.3 Worksheet</a>
		            </li>
			    </ul>
			    
			</div>
			</li>
	
	
	    	
         	<li class="">
       		<div class="tlp_links">
	        	<div id="c15" class="mO">
						<a href="#" class="" onclick="toggleMenu('menuc15'); toggleClass('c15'); return false">
		                  <img src="../../../common/images/trans.gif" class="expandCollapseTrans" border="0" width="10" height="12" onclick="changeAlt(this)" alt="Expand Menu" title="Expand Menu">
		                </a>
		                <a href="../../../contents/c15/index.htm" class="">
		                  15 Pipelining the Beta  			                
	                    </a>
	                 			                
	            </div>
			    
	        	<ul id="menuc15" class="">
					               
		            <li class="">
				 		<a href="../../../contents/c15/c15s1/index.htm" class="">15.1 Annotated Slides</a>
		            </li>
		            <li class="">
				 		<a href="../../../contents/c15/c15s2/index.htm" class="">15.2 Topic Videos</a>
		            </li>
		            <li class="">
				 		<a href="../../../contents/c15/c15s3/index.htm" class="">15.3 Worksheet</a>
		            </li>
			    </ul>
			    
			</div>
			</li>
	
	
	    	
         	<li class="">
       		<div class="tlp_links">
	        	<div id="c16" class="mO">
						<a href="#" class="" onclick="toggleMenu('menuc16'); toggleClass('c16'); return false">
		                  <img src="../../../common/images/trans.gif" class="expandCollapseTrans" border="0" width="10" height="12" onclick="changeAlt(this)" alt="Expand Menu" title="Expand Menu">
		                </a>
		                <a href="../../../contents/c16/index.htm" class="">
		                  16 Virtual Memory  			                
	                    </a>
	                 			                
	            </div>
			    
	        	<ul id="menuc16" class="">
					               
		            <li class="">
				 		<a href="../../../contents/c16/c16s1/index.htm" class="">16.1 Annotated Slides</a>
		            </li>
		            <li class="">
				 		<a href="../../../contents/c16/c16s2/index.htm" class="">16.2 Topic Videos</a>
		            </li>
		            <li class="">
				 		<a href="../../../contents/c16/c16s3/index.htm" class="">16.3 Worksheet</a>
		            </li>
			    </ul>
			    
			</div>
			</li>
	
	
	    	
         	<li class="">
       		<div class="tlp_links">
	        	<div id="c17" class="mO">
						<a href="#" class="" onclick="toggleMenu('menuc17'); toggleClass('c17'); return false">
		                  <img src="../../../common/images/trans.gif" class="expandCollapseTrans" border="0" width="10" height="12" onclick="changeAlt(this)" alt="Expand Menu" title="Expand Menu">
		                </a>
		                <a href="../../../contents/c17/index.htm" class="">
		                  17 Virtualizing the Processor  			                
	                    </a>
	                 			                
	            </div>
			    
	        	<ul id="menuc17" class="">
					               
		            <li class="">
				 		<a href="../../../contents/c17/c17s1/index.htm" class="">17.1 Annotated Slides</a>
		            </li>
		            <li class="">
				 		<a href="../../../contents/c17/c17s2/index.htm" class="">17.2 Topic Videos</a>
		            </li>
		            <li class="">
				 		<a href="../../../contents/c17/c17s3/index.htm" class="">17.3 Worksheet</a>
		            </li>
			    </ul>
			    
			</div>
			</li>
	
	
	    	
         	<li class="">
       		<div class="tlp_links">
	        	<div id="c18" class="mO">
						<a href="#" class="" onclick="toggleMenu('menuc18'); toggleClass('c18'); return false">
		                  <img src="../../../common/images/trans.gif" class="expandCollapseTrans" border="0" width="10" height="12" onclick="changeAlt(this)" alt="Expand Menu" title="Expand Menu">
		                </a>
		                <a href="../../../contents/c18/index.htm" class="">
		                  18 Devices and Interrupts  			                
	                    </a>
	                 			                
	            </div>
			    
	        	<ul id="menuc18" class="">
					               
		            <li class="">
				 		<a href="../../../contents/c18/c18s1/index.htm" class="">18.1 Annotated Slides</a>
		            </li>
		            <li class="">
				 		<a href="../../../contents/c18/c18s2/index.htm" class="">18.2 Topic Videos</a>
		            </li>
		            <li class="">
				 		<a href="../../../contents/c18/c18s3/index.htm" class="">18.3 Worksheet</a>
		            </li>
			    </ul>
			    
			</div>
			</li>
	
	
	    	
         	<li class="">
       		<div class="tlp_links">
	        	<div id="c19" class="mO">
						<a href="#" class="" onclick="toggleMenu('menuc19'); toggleClass('c19'); return false">
		                  <img src="../../../common/images/trans.gif" class="expandCollapseTrans" border="0" width="10" height="12" onclick="changeAlt(this)" alt="Expand Menu" title="Expand Menu">
		                </a>
		                <a href="../../../contents/c19/index.htm" class="">
		                  19 Concurrency and Synchronization  			                
	                    </a>
	                 			                
	            </div>
			    
	        	<ul id="menuc19" class="">
					               
		            <li class="">
				 		<a href="../../../contents/c19/c19s1/index.htm" class="">19.1 Annotated Slides</a>
		            </li>
		            <li class="">
				 		<a href="../../../contents/c19/c19s2/index.htm" class="">19.2 Topic Videos</a>
		            </li>
		            <li class="">
				 		<a href="../../../contents/c19/c19s3/index.htm" class="">19.3 Worksheet</a>
		            </li>
			    </ul>
			    
			</div>
			</li>
	
	
	    	
         	<li class="">
       		<div class="tlp_links">
	        	<div id="c20" class="mO">
						<a href="#" class="" onclick="toggleMenu('menuc20'); toggleClass('c20'); return false">
		                  <img src="../../../common/images/trans.gif" class="expandCollapseTrans" border="0" width="10" height="12" onclick="changeAlt(this)" alt="Expand Menu" title="Expand Menu">
		                </a>
		                <a href="../../../contents/c20/index.htm" class="">
		                  20 System-level Communication  			                
	                    </a>
	                 			                
	            </div>
			    
	        	<ul id="menuc20" class="">
					               
		            <li class="">
				 		<a href="../../../contents/c20/c20s1/index.htm" class="">20.1 Annotated Slides</a>
		            </li>
		            <li class="">
				 		<a href="../../../contents/c20/c20s2/index.htm" class="">20.2 Topic Videos</a>
		            </li>
			    </ul>
			    
			</div>
			</li>
	
	
	    	
         	<li class="">
       		<div class="tlp_links">
	        	<div id="c21" class="mO">
						<a href="#" class="" onclick="toggleMenu('menuc21'); toggleClass('c21'); return false">
		                  <img src="../../../common/images/trans.gif" class="expandCollapseTrans" border="0" width="10" height="12" onclick="changeAlt(this)" alt="Expand Menu" title="Expand Menu">
		                </a>
		                <a href="../../../contents/c21/index.htm" class="">
		                  21 Parallel Processing  			                
	                    </a>
	                 			                
	            </div>
			    
	        	<ul id="menuc21" class="">
					               
		            <li class="">
				 		<a href="../../../contents/c21/c21s1/index.htm" class="">21.1 Annotated Slides</a>
		            </li>
		            <li class="">
				 		<a href="../../../contents/c21/c21s2/index.htm" class="">21.2 Topic Videos</a>
		            </li>
			    </ul>
			    
			</div>
			</li>
	
	
	    	
	    	    
		    
         	
	<!--second tal block close-->  
	
</ul>


<!--Left Nav Ends -->









           		     </nav>
           		     <main id="course_inner_section" aria-labelledby="section_title">
           		     	
	       		     	<ul class="navigation pagination">     <li id="top_bck_btn"><a href="../../../contents/c7/index.htm">&lt;<span>Performance Measures</span></a></li>     <li id="flp_btn_1" class="button_selected"><a href="../../../contents/c7/c7s1/index.htm">7.1.1<span>Annotated slides</span></a></li>     <li id="top_continue_btn"><a href="../../../contents/c7/c7s2/index.htm">&gt;<span>Topic Videos</span></a></li> </ul> <p><style type="text/css">
.toc {
  margin-left: 2em;
}
.lecslide {
  margin-top: 1em;
  margin-bottom: 1em;
  border-top: 0.5px solid #808080;
  padding-top: 1em;
  text-align: center;
}
.lecslideimg {
  width: 5in;
  border: 1px solid black;
}
</style></p> <h1>L07: Performance Measures</h1> <div class="toc"><ol>     <li style="margin-bottom:0.1em;"><a href="#1">Forget Circuits... Let’s Solve a Real Problem</a></li>     <li style="margin-bottom:0.1em;"><a href="#2">One Load at a Time</a></li>     <li style="margin-bottom:0.1em;"><a href="#3">Doing N Loads of Laundry</a></li>     <li style="margin-bottom:0.1em;"><a href="#4">Doing N Loads... The 6.004 Way</a></li>     <li style="margin-bottom:0.1em;"><a href="#5">Performance Measures</a></li>     <li style="margin-bottom:0.1em;"><a href="#6">Okay, Back to Circuits...</a></li>     <li style="margin-bottom:0.1em;"><a href="#7">Pipelined Cicuits</a></li>     <li style="margin-bottom:0.1em;"><a href="#8">Pipeline Diagrams</a></li>     <li style="margin-bottom:0.1em;"><a href="#9">Pipeline Conventions</a></li>     <li style="margin-bottom:0.1em;"><a href="#10">Ill-Formed Pipelines</a></li>     <li style="margin-bottom:0.1em;"><a href="#11">A Pipelining Methodology</a></li>     <li style="margin-bottom:0.1em;"><a href="#12">Pipeline Example</a></li>     <li style="margin-bottom:0.1em;"><a href="#13">Pipelined Components</a></li>     <li style="margin-bottom:0.1em;"><a href="#14">How Do 6.004 Students Do Laundry?</a></li>     <li style="margin-bottom:0.1em;"><a href="#15">Back to Our Bottleneck...</a></li>     <li style="margin-bottom:0.1em;"><a href="#16">Circuit Interleaving I</a></li>     <li style="margin-bottom:0.1em;"><a href="#17">Circuit Interleaving II</a></li>     <li style="margin-bottom:0.1em;"><a href="#18">Circuit Interleaving III</a></li>     <li style="margin-bottom:0.1em;"><a href="#19">Combine Techniques</a></li>     <li style="margin-bottom:0.1em;"><a href="#20">And Add a Little Parallelism...</a></li>     <li style="margin-bottom:0.1em;"><a href="#21">Control Structure Alternatives</a></li>     <li style="margin-bottom:0.1em;"><a href="#22">Self-Timed Example</a></li>     <li style="margin-bottom:0.1em;"><a href="#23">Self-Timed Example (continued)</a></li>     <li style="margin-bottom:0.1em;"><a href="#24">Control Structure Taxonomy</a></li>     <li style="margin-bottom:0.1em;"><a href="#25">Summary</a></li> </ol></div> <p><strong>Content of the following slides is described in the surrounding text.</strong></p> <p>In this lecture our goal is to introduce some metrics for   measuring the performance of a circuit and then investigate ways   to improve that performance.  We’ll start by putting aside   circuits for a moment and look at an everyday example that will   help us understand the proposed performance metrics.</p> <div class="lecslide"><a name="1"><img class="lecslideimg" src="../../../contents/c7/c7s1/Slide02.png" alt=""></a></div> <p>Laundry is a processing task we all have to face at some point!   The input to our laundry “system” is some number of   loads of dirty laundry and the output is the same loads, but   washed, dried, and folded.  There two system components: a   washer that washes a load of laundry in 30 minutes, and a dryer   that dries a load in 60 minutes.  You may be used to laundry   system components with different propagation delays, but   let’s go with these delays for our example.</p> <p>Our laundry follows a simple path through the system: each load   is first washed in the washer and afterwards moved to the dryer   for drying.  There can, of course, be delays between the steps   of loading the washer, or moving wet, washed loads to the dryer,   or in taking dried loads out of the dryer.  Let’s assume   we move the laundry through the system as fast as possible,   moving loads to the next processing step as soon as we can.</p> <div class="lecslide"><a name="2"><img class="lecslideimg" src="../../../contents/c7/c7s1/Slide03.png" alt=""></a></div> <p>Most of us wait to do laundry until we’ve accumulated   several loads.  That turns out to be a good strategy!   Let’s see why...</p> <p>To process a single load of laundry, we first run it through   the washer, which takes 30 minutes.  Then we run it through the   dryer, which takes 60 minutes.  So the total amount of time from   system input to system output is 90 minutes.  If this were a   combinational logic circuit, we’d say the circuit’s   propagation delay is 90 minutes from valid inputs to valid   outputs.</p> <p>Okay, that’s the performance analysis for a single load   of laundry.  Now let’s think about doing N loads of   laundry.</p> <div class="lecslide"><a name="3"><img class="lecslideimg" src="../../../contents/c7/c7s1/Slide04.png" alt=""></a></div> <p>Here at MIT we like to make gentle fun of our colleagues at the   prestigious institution just up the river from us.  So   here’s how we imagine they do N loads of laundry at   Harvard. They follow the combinational recipe of supplying new   system inputs after the system generates the correct output from   the previous set of inputs.  So in step 1 the first load is   washed and in step 2, the first load is dried, taking a total of   90 minutes.  Once those steps complete, Harvard students move on   to step 3, starting the processing of the second load of   laundry.  And so on...</p> <p>The total time for the system to process N laundry loads is   just N times the time it takes to process a single load.  So the   total time is N*90 minutes.</p> <p>Of course, we’re being silly here!  Harvard students   don’t actually do laundry.  Mummy sends the family butler   over on Wednesday mornings to collect the dirty loads and return   them starched and pressed in time for afternoon tea.</p> <p>But I hope you’re seeing the analogy we’re making   between the Harvard approach to laundry and combinational   circuits.  We can all see that the washer is sitting idle while   the dryer is running and that inefficiency has a cost in terms   of the rate at which N loads of laundry can move through the   system.</p> <div class="lecslide"><a name="4"><img class="lecslideimg" src="../../../contents/c7/c7s1/Slide05.png" alt=""></a></div> <p>As engineering students here in 6.004, we see that it makes   sense to overlap washing and drying.  So in step 1 we wash the   first load.  And in step 2, we dry the first load as before,   but, in addition, we start washing the second load of laundry.   We have to allocate 60 minutes for step 2 in order to give the   dryer time to finish. There’s a slight inefficiency in   that the washer finishes its work early, but with only one   dryer, it’s the dryer that determines how quickly laundry   moves through the system.</p> <p>Systems that overlap the processing of a sequence of inputs are   called pipelined systems and each of the processing steps is   called a stage of the pipeline.  The rate at which inputs move   through the pipeline is determined by the slowest pipeline   stage.  Our laundry system is a 2-stage pipeline with a   60-minute processing time for each stage.</p> <p>We repeat the overlapped wash/dry step until all N loads of   laundry have been processed.  We’re starting a new   washer load every 60 minutes and getting a new load of dried   laundry from the dryer every 60 minutes.  In other words, the   effective processing rate of our overlapped laundry system is   one load every 60 minutes. So once the process is underway N   loads of laundry takes N*60 minutes.  And a particular load of   laundry, which requires two stages of processing time, takes 120   minutes.</p> <p>The timing for the first load of laundry is a little different   since the timing of Step 1 can be shorter with no dryer to wait   for.  But in the performance analysis of pipelined systems,   we’re interested in the steady state where we’re   assuming that we have an infinite supply of inputs.</p> <div class="lecslide"><a name="5"><img class="lecslideimg" src="../../../contents/c7/c7s1/Slide06.png" alt=""></a></div> <p>We see that there are two interesting performance metrics.  The   first is the latency of the system, the time it takes for the   system to process a particular input.  In the Harvard laundry   system, it takes 90 minutes to wash and dry a load.  In the   6.004 laundry, it takes 120 minutes to wash and dry a load,   assuming that it’s not the first load.</p> <p>The second performance measure is throughput, the rate at which   the system produces outputs.  In many systems, we get one set of   outputs for each set of inputs, and in such systems, the   throughput also tells us the rate at which inputs are consumed.  In   the Harvard laundry system, the throughput is 1 load of laundry   every 90 minutes.  In the 6.004 laundry, the throughput is 1   load of laundry every 60 minutes.</p> <p>The Harvard laundry has lower latency, the 6.004 laundry has   better throughput.  Which is the better system?  That depends on   your goals!  If you need to wash 100 loads of laundry,   you’d prefer to use the system with higher throughput.   If, on the other hand, you want clean underwear for your date in   90 minutes, you’re much more concerned about the   latency.</p> <p>The laundry example also illustrates a common tradeoff between   latency and throughput.  If we increase throughput by using   pipelined processing, the latency usually increases since all   pipeline stages must operate in lock-step and the rate of   processing is thus determined by the slowest stage.</p> <div class="lecslide"><a name="6"><img class="lecslideimg" src="../../../contents/c7/c7s1/Slide07.png" alt=""></a></div> <p>Okay, now let’s apply all this analysis to improving the   performance of our circuits.  The latency of a combinational   logic circuit is simply its propagation delay \(t_{\textrm{PD}}\).   And the throughput is just \(1/t_{\textrm{PD}}\) since we start   processing the next input only after finishing the computation   on the current input.</p> <p>Consider a combinational system with three components: F, G,   and H, where F and G work in parallel to produce the inputs to   H.  Using this timing diagram we can follow the processing of a   particular input value X.  Sometime after X is valid and stable,   the F and G modules produce their outputs F(X) and G(X).</p> <p>Now that the inputs to H are valid and stable, the H module   will produce the system output P(X) after a delay set by the   propagation delay of H.  The total elapsed time from valid input   to valid output is determined by the propagation delays of the   component modules.  Assuming we use those modules as-is, we   can’t make any improvements on this latency.</p> <p>But what about the system’s throughput?  Observe that   after producing their outputs, the F and G modules are sitting idle, just holding their outputs stable while H performs   its computation.  Can we figure out a way for F and G to get   started processing the next input while still letting H do its   job on the first input?  In other words, can we divide the   processing of the combinational circuit into two stages where   the first stage computes F(X) and G(X), and the second stage   computes H(X)?  If we can, then we can increase the throughput   of the system.</p> <div class="lecslide"><a name="7"><img class="lecslideimg" src="../../../contents/c7/c7s1/Slide08.png" alt=""></a></div> <p>Mr. Blue’s inspiration is to use registers to hold the   values F(X) and G(X) for use by H, while the F and G modules   start working on the next input value.  To make our timing   analysis a little easier, we’ll assume that our pipelining   registers have a zero propagation delay and setup time.</p> <p>The appropriate clock period for this sequential circuit is   determined by the propagation delay of the slowest processing   stage.  In this example, the stage with F and G needs a clock   period of at least 20 ns to work correctly.  And the stage with   H needs a clock period of 25 ns to work correctly.  So the   second stage is the slowest and sets the system clock period at   25 ns.</p> <p>This will be our general plan for increasing the throughput of   combinational logic: we’ll use registers to divide the   processing into a sequence of stages, where the registers   capture the outputs from one processing stage and hold them as   inputs for the next processing stage.  A particular input will   progress through the system at the rate of one stage per clock   cycle.</p> <p>In this example, there are two stages in the processing   pipeline and the clock period is 25 ns, so the latency of the   pipelined system is 50 ns, <i>i.e.</i>, the number of stages   times the system’s clock period.  The latency of the   pipeline system is a little longer than the latency of the   unpipelined system.  However, the pipeline system produces 1   output every clock period, or 25 ns.  The pipeline system has   considerably better throughput at the cost of a small increase   in latency.</p> <div class="lecslide"><a name="8"><img class="lecslideimg" src="../../../contents/c7/c7s1/Slide09.png" alt=""></a></div> <p>Pipeline diagrams help us visualize the operation of a   pipelined system.  The rows of the pipeline diagram represent   the pipeline stages and the columns are successive clock   cycles.</p> <p>At the beginning of clock cycle \(i\) the input \(X_i\) becomes   stable and valid.  Then during clock cycle \(i\) the F and G   modules process that input and at the end of the cycle the   results F(\(X_i\)) and G(\(X_i\)) are captured by the pipeline   registers between the first and second stages.</p> <p>Then in cycle \(i+1\), H uses the captured values to do its share of   the processing of \(X_i\).  And, meanwhile, the F and G modules   are working on \(X_{i+1}\).  You can see that the processing for a   particular input value moves diagonally through the diagram, one   pipeline stage per clock cycle.</p> <p>At the end of cycle \(i+1\), the output of H is captured by the final pipeline register and is available for use during cycle \(i+2\).  The total time elapsed between the arrival of an input and   the availability of the output is two cycles.</p> <p>The processing continues cycle after cycle, producing a new   output every clock cycle.</p> <p>Using the pipeline diagram we can track how a particular input   progresses through the system or see what all the stages are   doing in any particular cycle.</p> <div class="lecslide"><a name="9"><img class="lecslideimg" src="../../../contents/c7/c7s1/Slide10.png" alt=""></a></div> <p>We’ll define a K-stage pipeline (or K-pipeline for short)   as an acyclic circuit having exactly K registers on every path   from input to output.  An unpipelined combinational circuit is   thus a 0-stage pipeline.</p> <p>To make it easy to build larger pipelined systems out of   pipelined components, we’ll adopt the convention that   every pipeline stage, and hence every K-stage pipeline, has a   register on its OUTPUT.</p> <p>We’ll use the techniques we learned for analyzing the   timing of sequential circuits to ensure the clock signal common   to all the pipeline registers has a period sufficient to ensure   correct operation of each stage.  So for every   register-to-register and input-to-register path, we need to   compute the sum of the propagation delay of the input register,   plus the propagation delay of the combinational logic, plus the   setup time of the output register.  Then we’ll choose the   system’s clock period to be greater than or equal to the   largest such sum.</p> <p>With the correct clock period and exactly K registers along   each path from system input to system output, we are guaranteed   that the K-pipeline will compute the same outputs as the   original unpipelined combinational circuit.</p> <p>The latency of a K-pipeline is K times the period of the   system’s clock.  And the throughput of a K-pipeline is the   frequency of the system’s clock, <i>i.e.</i>, 1 over the   clock period.</p> <div class="lecslide"><a name="10"><img class="lecslideimg" src="../../../contents/c7/c7s1/Slide11.png" alt=""></a></div> <p>Here’s a failed attempt at pipelining a circuit.  For   what value of K is the circuit a K-pipeline?  Well, let’s   count the number of registers along each path from system inputs   to system outputs.</p> <p>The top path through the A and C components has 2 registers.   As does the bottom path through the B and C components.  But the   middle path through all three components has only 1 register.   Oops, this not a well-formed K-pipeline.</p> <p>Why do we care? We care because this pipelined circuit does not   compute the same answer as the original unpipelined circuit.   The problem is that successive generations of inputs get mixed   together during processing.  For example, during cycle i+1, the   B module is computing with the current value of the X input but   the previous value of the Y input.</p> <p>This can’t happen with a well-formed K-pipeline.  So we   need to develop a technique for pipelining a circuit that   guarantees the result will be well-formed.</p> <div class="lecslide"><a name="11"><img class="lecslideimg" src="../../../contents/c7/c7s1/Slide12.png" alt=""></a></div> <p>Here’s our strategy that will ensure if we add a pipeline   register along one path from system inputs to system outputs, we   will add pipeline registers along every path.</p> <p>Step 1 is to draw a contour line that crosses every output in   the circuit and mark its endpoints as the terminal points for   all the other contours we’ll add.</p> <p>During Step 2 continue to draw contour lines between the two   terminal points across the signal connections between modules.   Make sure that every signal connection crosses the new contour   line in the same direction.  This means that system inputs will   be one side of the contour and system outputs will be on the   other side. These contours demarcate pipeline stages.</p> <p>Place a pipeline register wherever a signal connection   intersects the pipelining contours.  Here we’ve marked the   location of pipeline registers with large black dots.</p> <p>By drawing the contours from terminal point to terminal point   we guarantee that we cross every input-output path, thus   ensuring our pipeline will be well-formed.</p> <p>Now we can compute the system’s clock period by looking   for the pipeline stage with the longest register-to-register or   input-to-register propagation delay.  With these contours and   assuming ideal zero-delay pipeline registers, the system clock   must have a period of 8 ns to accommodate the operation of the C   module.  This gives a system throughput of 1 output every 8 ns.   Since we drew 3 contours, this is a 3-pipeline and the system   latency is 3 times 8 ns or 24 ns total.</p> <p>Our usual goal in pipelining a circuit is to achieve maximum   throughput using the fewest possible registers.  So our strategy   is to find the slowest system component (in our example, the C   component) and place pipeline registers on its inputs and   outputs.  So we drew contours that pass on either side of the C   module.  This sets the clock period at 8 ns, so we position the   contours so that the longest path between any two pipeline registers   is at most 8.</p> <p>There are often several choices for how to draw a contour while   maintaining the same throughput and latency.  For example, we   could have included the E module in the same pipeline stage as   the F module.</p> <div class="lecslide"><a name="12"><img class="lecslideimg" src="../../../contents/c7/c7s1/Slide13.png" alt=""></a></div> <p>Okay, let’s review our pipelining strategy.</p> <p>First we draw a contour across all the outputs.  This creates a   1-pipeline, which, as you can see, will always have the same   throughput and latency as the original combinational   circuit.</p> <p>Then we draw our next contour, trying to isolate the slowest   component in the system.  This creates a 2-pipeline with a clock   period of 2 and hence a throughput of 1/2, or double that of the   1-pipeline.</p> <p>We can add additional contours, but note that the 2-pipeline   had the smallest possible clock period, so after that additional   contours add stages and hence increase the system’s   latency without increasing its throughput.  Not illegal, just   not a worthwhile investment in hardware.</p> <p>Note that the signal connection between the A and C module now   has two back-to-back pipelining registers.  Nothing wrong with   that; it often happens when we pipeline a circuit where the   input-output paths are of different lengths.</p> <p>So our pipelining strategy will be to pipeline implementations   with increased throughput, usually at the cost of increased   latency.  Sometimes we get lucky and the delays of each pipeline   stage are perfectly balanced, in which case the latency will not   increase.  Note that a pipelined circuit will NEVER have a   smaller latency than the unpipelined circuit.</p> <p>Notice that once we’ve isolated the slowest component, we   can’t increase the throughput any further.  How do we   continue to improve the performance of circuits in light of   these performance bottlenecks?</p> <div class="lecslide"><a name="13"><img class="lecslideimg" src="../../../contents/c7/c7s1/Slide14.png" alt=""></a></div> <p>One solution is to use pipelined components if they’re   available!  Suppose we’re able to replace the original A   component with a 2-stage pipelined version A-prime.</p> <p>We can redraw our pipelining contours, making sure we account   for the internal pipeline registers in the A-prime component.   This means that 2 of our contours have to pass through the   A-prime component, guaranteeing that we’ll add pipeline   registers elsewhere in the system that will account for the   two-cycle delay introduced by A-prime.</p> <p>Now the maximum propagation delay in any stage is 1 ns,   doubling the throughput from 1/2 to 1/1.  This is a 4-pipeline   so the latency will be 4 ns.</p> <p>This is great!  But what can we do if our bottleneck component   doesn’t have a pipelined substitute? We’ll tackle   that question in the next section.</p> <div class="lecslide"><a name="14"><img class="lecslideimg" src="../../../contents/c7/c7s1/Slide15.png" alt=""></a></div> <p>6.004 students work around the dryer bottleneck by finding a   laundromat that has two dryers for every washer.  Looking at the   timeline you can see the plan, which is divided into 30-minute   steps.  The washer is in use every step, producing a   newly-washed load every 30 minutes.  Dryer usage is interleaved,   where Dryer #1 is used to dry the odd-numbered loads and Dryer   #2 is used to dry the even-numbered loads.  Once started, a   dryer runs for a duration of two steps, a total of 60 minutes.   Since the dryers run on a staggered schedule, the system as a   whole produces a load of clean, dry laundry every 30   minutes.</p> <p>The steady-state throughput is 1 load of laundry every 30   minutes and the latency for a particular load of laundry is 90   minutes.</p> <p>And now here’s the take-home message from this example.   Consider the operation of the two-dryer system.  Even though the   component dryers themselves aren’t pipelined, the   two-dryer interleaving system is acting like a 2-stage pipeline   with a clock period of 30 minutes and a latency of 60 minutes.   In other words, by interleaving the operation of 2 unpipelined   components we can achieve the effect of a 2-stage pipeline.</p> <div class="lecslide"><a name="15"><img class="lecslideimg" src="../../../contents/c7/c7s1/Slide16.png" alt=""></a></div> <p>Returning to the example of the previous section, we   couldn’t improve the throughput of our pipelined system   past 1/8 ns since the minimum clock period was set the by the 8   ns latency of the C module.</p> <p>To improve the throughput further we either need to find a   pipelined version of the C component or use an interleaving   strategy to achieve the effect of a 2-stage pipeline using two   instances of the unpipelined C component.  Let’s try   that...</p> <div class="lecslide"><a name="16"><img class="lecslideimg" src="../../../contents/c7/c7s1/Slide17.png" alt=""></a></div> <p>Here’s a circuit for a general-purpose two-way   interleaver, using, in this case, two copies of the unpipelined   C component, \(C_0\) and \(C_1\).</p> <p>The input for each C component comes from a D-latch, which has   the job of capturing and holding the input value.  There’s   also a multiplexer to select which C-component output will be   captured by the output register.</p> <p>In the lower left-hand corner of the circuit is a very simple   2-state FSM with one state bit.  The next-state logic is a   single inverter, which causes the state to alternate between 0   and 1 on successive clock cycles.  This timing diagram shows how   the state bit changes right after each rising clock edge.</p> <p>To help us understand the circuit, we’ll look at some   signal waveforms to illustrate its operation.</p> <div class="lecslide"><a name="17"><img class="lecslideimg" src="../../../contents/c7/c7s1/Slide18.png" alt=""></a></div> <p>To start, here are the waveforms for the CLK signal and our FSM   state bit from the previous slide.</p> <p>A new X input arrives from the previous stage just after the   rising edge of the clock.</p> <p>Next, let’s follow the operation of the \(C_0\) component.   Its input latch is open when FSM Q is low, so the newly arriving   \(X_1\) input passes through the latch and \(C_0\) can begin its   computation, producing its result at the end of clock cycle #2.   Note that the \(C_0\) input latch closes at the beginning of the   second clock cycle, holding the \(X_1\) input value stable even   though the X input is starting to change.  The effect is that   \(C_0\) has a valid and stable input for the better part of 2   clock cycles giving it enough time to compute its result.</p> <p>The \(C_1\) waveforms are similar, just shifted by one clock   cycle.  \(C_1\)’s input latch is open when FSM Q is high, so   the newly arriving \(X_2\) input passes through the latch and   \(C_1\) can being its computation, producing its result at the end   of clock cycle #3.</p> <p>Now let’s check the output of the multiplexer.  When FSM   Q is high, it selects the value from \(C_0\) and when FSM Q is   low, it selects the value from \(C_1\).  We can see that happening   in the waveform shown.</p> <p>Finally, at the rising edge of the clock, the output register   captures the value on its input and holds it stable for the   remainder of the clock cycle.</p> <p>The behavior of the interleaving circuit is like a 2-stage   pipeline: the input value arriving in cycle \(i\) is processed over   two clock cycles and the result output becomes available on   cycle \(i+2\).</p> <p>What about the clock period for the interleaving system?  Well,   there is some time lost to the propagation delays of the   upstream pipeline register that supplies the X input, the   internal latches and multiplexer, and the setup time of the   output register.  So the clock cycle has to be just a little bit   longer than half the propagation delay of the C module.</p> <div class="lecslide"><a name="18"><img class="lecslideimg" src="../../../contents/c7/c7s1/Slide19.png" alt=""></a></div> <p>We can treat the interleaving circuit as a 2-stage pipeline,   consuming an input value every clock cycle and producing a   result two cycles later.</p> <p>When incorporating an N-way interleaved component in our   pipeline diagrams, we treat it just like a N-stage pipeline.  So   N of our pipelining contours have to pass through the   component.</p> <div class="lecslide"><a name="19"><img class="lecslideimg" src="../../../contents/c7/c7s1/Slide20.png" alt=""></a></div> <p>Here we’ve replaced the slow unpipelined C component with   a 2-way interleaved C-prime component.</p> <p>We can follow our process for drawing pipelining contours.   First we draw a contour across all the outputs.  Then we add   contours, ensuring that two of them pass through the C-prime   component. Then we add pipeline registers at the intersections   of the contours with the signal connections.  We see that the   contours passing through C-prime have caused extra pipeline   registers to be added on the other inputs to the F module,   accommodating the 2-cycle delay through C-prime.</p> <p>Somewhat optimistically we’ve specified the C-prime   minimum \(t_{\textrm{CLK}}\) to be 4 ns, so that means that the   slow component which determines the system’s clock period   is now the F module, with a propagation delay of 5 ns.</p> <p>So the throughput of our new pipelined circuit is 1 output   every 5 ns, and with 5 contours, it’s a 5-pipeline so the   latency is 5 times the clock period or 25 ns.</p> <div class="lecslide"><a name="20"><img class="lecslideimg" src="../../../contents/c7/c7s1/Slide21.png" alt=""></a></div> <p>By running pipelined systems in parallel we can continue to   increase the throughput.  Here we show a laundry with 2 washers   and 4 dryers, essentially just two copies of the 1-washer,   2-dryer system shown earlier.  The operation is as described   before, except that at each step the system produces and   consumes two loads of laundry.</p> <p>So the throughput is 2 loads every 30 minutes for an effective   rate of 1 load every 15 minutes.  The latency for a load   hasn’t changed; it’s still 90 minutes per load.</p> <p>We’ve seen that even with slow components we can use   interleaving and parallelism to continue to increase throughput.   Is there an upper bound on the throughput we can achieve?  Yes!   The timing overhead of the pipeline registers and interleaving   components will set a lower bound on the achievable clock   period, thus setting an upper bound on the achievable   throughput.  Sorry, no infinite speed-up is possible in the real   world.</p> <div class="lecslide"><a name="21"><img class="lecslideimg" src="../../../contents/c7/c7s1/Slide22.png" alt=""></a></div> <p>We’ve been designing our processing pipelines to have all   the stages operate in lock step, choosing the clock period to   accommodate the worst-case processing time over all the stages.   This is what we’d call a synchronous, globally timed   system.</p> <p>But what if there are data dependencies in the processing   time, <i>i.e.</i>, if for some data inputs a particular   processing stage might be able to produce its output in a   shorter time?  Can we design a system that could take advantage   of that opportunity to increase throughput?</p> <p>One alternative is to continue to use a single system clock,   but for each stage to signal when it’s ready for a new   input and when it has a new output ready for the next stage.   It’s fun to design a simple 2-signal handshake protocol to   reliably transfer data from one stage to the next.  The upstream   stage produces a signal called HERE-IS-X to indicate that is has   new data for the downstream stage.  And the downstream stage   produces a signal called GOT-X to indicate when it is willing to   consume data.  It’s a synchronous system so the signal   values are only examined on the rising edge of the clock.</p> <p>The handshake protocol works as follows: the upstream stage   asserts HERE-IS-X if it will have a new output value available   at the next rising edge of the clock.  The downstream stage   asserts GOT-X if it will grab the next output at the rising edge   of the clock.  Both stages look at the signals on the rising   edge of the clock to decide what to do next.  If both stages see   that HERE-IS-X and GOT-X are asserted at the same clock edge,   the handshake is complete and the data transfer happens at that   clock edge.  Either stage can delay a transfer if they are still   working on producing the next output or consuming the previous   input.</p> <div class="lecslide"><a name="22"><img class="lecslideimg" src="../../../contents/c7/c7s1/Slide23.png" alt=""></a></div> <p>It’s possible, although considerably more difficult, to   build a clock-free asynchronous self-timed system that uses a   similar handshake protocol.  The handshake involves four phases.   In phase 1, when the upstream stage has a new output and GOT-X   is deasserted, it asserts its HERE-IS-X signal and then waits to   see the downstream stage’s reply on the GOT-X signal.  In   phase 2, the downstream stage, seeing that HERE-IS-X is   asserted, asserts GOT-X when it has consumed the available   input.  In phase 3, the downstream stage waits to see the   HERE-IS-X go low, indicating that the upstream stage has   successfully received the GOT-X signal.  In phase 4, once   HERE-IS-X is deasserted, the downstream stage deasserts GOT-X   and the transfer handshake is ready to begin again.  Note that   the upstream stage waits until it sees the GOT-X deasserted   before starting the next handshake.</p> <p>The timing of the system is based on the transitions of the   handshake signals, which can happen at any time the conditions   required by the protocol are satisfied.  No need for a global   clock here!</p> <p>It’s fun to think about how this self-timed protocol   might work when there are multiple downstream modules, each with   their own internal timing.</p> <p>In this example, A’s output is consumed by both the B and   C stages.  We need a special circuit, shown as a yellow box in   the diagram, to combine the GOT-X signals from the B and C   stages and produce a summary signal for the A stage.</p> <p>Let’s take a quick look at the timing diagram shown here.   After A has asserted HERE-IS-X, the circuit in the yellow box   waits until both the B and the C stage have asserted their GOT-X   signals before asserting GOT-X to the A stage.  At this point   the A stage deasserts HERE-IS-X, then the yellow box waits until   both the B and C stages have deasserted their GOT-X signals,   before deasserting GOT-X to the A stage.</p> <div class="lecslide"><a name="23"><img class="lecslideimg" src="../../../contents/c7/c7s1/Slide24.png" alt=""></a></div> <p>Let’s watch the system in action!  When a signal is   asserted we’ll show it in red, otherwise it’s shown   in black.</p> <p>A new value for the A stage arrives on A’s data input and   the module supplying the value then asserts its HERE-IS-X signal   to let A know it has a new input.</p> <p>At some point later, A signals GOT-X back upstream to indicate   that it has consumed the value, then the upstream stage   deasserts HERE-IS-X, followed by A deasserting its GOT-X output.   This completes the transfer of the data to the A stage.</p> <p>When A is ready to send a new output to the B and C stages, it   checks that its GOT-X input is deasserted (which it is), so it   asserts the new output value and signals HERE-IS-X to the yellow   box which forwards the signal to the downstream stages.</p> <p>B is ready to consume the new input and so asserts its GOT-X   output.  Note that C is still waiting for its second input and   has yet to assert its GOT-X output.</p> <p>After B finishes its computation, it supplies a new value to C   and asserts its HERE-IS-X output to let C know its second input   is ready.</p> <p>Now C is happy and signals both upstream stages that it has   consumed its two inputs.  Now that both GOT-X inputs are   asserted, the yellow box asserts A’s GOT-X input to let it   know that the data has been transferred. Meanwhile B completes   its part of the handshake, and C completes its transaction with   B and A deasserts HERE-IS-X to indicate that it has seen its   GOT-X input.  When the B and C stages see their HERE-IS-X inputs   go low, they their finish their handshakes by deasserting their   GOT-X outputs, and when they’re both low, the yellow box   lets A know the handshake is complete by deserting A’s   GOT-X input.</p> <p>Whew!  The system has returned to the initial state where A is   now ready to accept some future input value.</p> <p>This an elegant design based entirely on transition signaling.   Each module is in complete control of when it consumes inputs   and produces outputs, and so the system can process data at the   fastest possible speed, rather than waiting for the worst-case   processing delay.</p> <div class="lecslide"><a name="24"><img class="lecslideimg" src="../../../contents/c7/c7s1/Slide25.png" alt=""></a></div> <p>Let’s summarize what we’ve learned about   controlling pipelined systems.  The most straightforward   approach is to use a pipeline with the system clock chosen to   accommodate the worst-case processing time.  These systems are   easy to design but can’t produce higher throughputs if the   processing stages might run more quickly for some data   values.</p> <p>We saw that we could use a simple handshake protocol to move   data through the system.  All communication still happens on the   rising edge of the system clock, but the specific clock edge   used to transfer data is determined by the stages   themselves.</p> <p>It’s tempting to wonder if we might adjust the global   clock period to take advantage of data-dependent processing   speedups.  But the necessary timing generators can be very   complicated in large systems. It’s usually much easier to   use local communication between modules to determine system   timing than trying to figure out all the constraints at the   system level.  So this approach isn’t usually a good   one.</p> <p>But what about locally-timed asynchronous systems like the   example we just saw?  Each generation of engineers has heard the   siren call of asynchronous logic.  Sadly, it usually proves too   hard to produce a provably reliable design for a large system,   say, a modern computer.  But there are special cases, such as   the logic for integer division, where the data-dependent   speed-ups make the extra work worthwhile.</p> <div class="lecslide"><a name="25"><img class="lecslideimg" src="../../../contents/c7/c7s1/Slide26.png" alt=""></a></div> <p>We characterized the performance of our systems by measuring   their latency and throughput.  For combinational circuits, the   latency is simply the propagation delay of the circuit and its   throughput is just 1/latency.</p> <p>We introduced a systematic strategy for designing K-pipelines,   where there’s a register on the outputs of each stage, and   there are exactly K registers on every path from input to   output.  The period of the system clock \(t_{\textrm{CLK}}\) is   determined by the propagation delay of the slowest pipeline   stage.  The throughput of a pipelined system is   \(1/t_{\textrm{CLK}}\) and its latency is \(K   t_{\textrm{CLK}}\).</p> <p>Pipelining is the key to increasing the throughput of most   high-performance digital systems.</p> <ul class="navigation progress">     <li id="bck_btn"><a href="../../../contents/c7/index.htm">Back<span>Performance Measures</span></a></li>     <li id="continue_btn"><a href="../../../contents/c7/c7s2/index.htm">Continue<span>Topic Videos</span></a></li> </ul> <p> </p>
	                    
    
    
    



	        			
	                    
	                    
	                    
	                    

            		 </main><!--Course_inner_section tag close -->
           		     <div class="clear"></div>
 				 </div>
<!--Course_wrapper tag close -->
 			 </div>
<!--left tag close -->
 			
         </div>
<!--grid tag close -->
      </div>
		
		<footer id="bottom">
			<div id="grid">
				
<div id="portletwrapper-6f63772e626f74746f6d706f72746c65746d616e616765720a636f6e746578740a2f506c6f6e650a736974652d666f6f746572" class="portletWrapper kssattr-portlethash-6f63772e626f74746f6d706f72746c65746d616e616765720a636f6e746578740a2f506c6f6e650a736974652d666f6f746572">
<div class="portletStaticText portlet-static-site-footer"><div id="footer">
<nav aria-label="Footer">     <nav id="foot-c1" class="grid_2 alpha" aria-labelledby="f-find-courses">       <span class="footer" id="f-find-courses" aria-hidden="true">Find Courses</span>
<ul class="foot-bullet" role="presentation">
    <li><a href="https://ocw.mit.edu/courses/find-by-topic/">Find by Topic</a></li>
    <li><a href="https://ocw.mit.edu/courses/find-by-number/">Find by Course Number</a></li>
    <li><a href="https://ocw.mit.edu/courses/find-by-department/">Find by Department</a></li>
    <li><a href="https://ocw.mit.edu/courses/new-courses/">New Courses</a></li>
    <li><a href="https://ocw.mit.edu/courses/most-visited-courses/">Most Visited Courses</a></li>
    <li><a href="https://ocw.mit.edu/courses/ocw-scholar/">OCW Scholar Courses</a></li>
    <li><a href="https://ocw.mit.edu/courses/audio-video-courses/">Audio/Video Courses</a></li>
    <li><a href="https://ocw.mit.edu/courses/online-textbooks/">Online Textbooks</a></li>
    <li><a href="https://ocw.mit.edu/courses/instructor-insights/">Instructor Insights</a></li>
    <li><a href="https://ocw.mit.edu/resources/">Supplemental Resources</a></li>
    <li><a href="https://ocw.mit.edu/courses/mitx-related-courseware/">MITx &amp; Related OCW Courses</a></li>
    <li><a href="https://ocw.mit.edu/courses/mit-open-learning-library/">MIT Open Learning Library</a></li>
    <li><a href="https://ocw.mit.edu/courses/translated-courses/">Translated Courses</a></li>
</ul>
</nav>
<div id="foot-c2" class="grid_2"><nav aria-labelledby="f-for-educators">         <span id="f-for-educators" class="footer" aria-hidden="true">For Educators</span>
<ul class="foot-bullet" role="presentation">
    <li><a href="https://chalk-radio.simplecast.com/">Chalk Radio Podcast</a></li>
    <li><a href="https://ocw.mit.edu/educator/">OCW Educator Portal </a></li>
    <li><a href="https://ocw.mit.edu/courses/instructor-insights/">Instructor Insights by Department</a></li>
    <li><a href="https://openlearning.mit.edu/campus/digital-innovations/" aria-label="External Link: Residential Digital Innovations">Residential Digital Innovations </a></li>
    <li><a href="https://ocw.mit.edu/high-school/">OCW Highlights for High School</a></li>
    <li><a href="https://ocw.mit.edu/educator/additional-resources/">Additional Resources</a></li>
</ul>
</nav></div>
<nav class="grid_2" id="foot-c3" aria-labelledby="f-donate">       <span id="f-donate" class="footer" aria-hidden="true">Give Now</span>
<ul class="foot-bullet" role="presentation">
    <li><a href="https://ocw.mit.edu/give/">Make a Donation</a></li>
    <li><a href="https://ocw.mit.edu/give/why-give/">Why Give?</a></li>
    <li><a href="https://ocw.mit.edu/give/our-supporters/">Our Supporters</a></li>
    <li><a href="https://ocw.mit.edu/give/other-ways-to-contribute/">Other Ways to Contribute</a></li>
    <li><a href="https://ocw.mit.edu/support/">Become a Corporate Sponsor</a></li>
</ul>
</nav>
<div class="grid_2" id="foot-c4">
<nav aria-labelledby="f-about">         <span id="f-about" class="footer" aria-hidden="true">About</span>
<ul class="foot-bullet" role="presentation">
    <li><a href="https://ocw.mit.edu/about/">About OpenCourseWare</a></li>
    <li><a href="https://ocw.mit.edu/about/site-statistics/">Site Statistics</a></li>
    <li><a href="https://ocw.mit.edu/about/ocw-stories/">OCW Stories</a></li>
    <li><a href="https://ocw.mit.edu/about/newsletter/">Newsletter</a></li>
    <li><a href="https://www.ocw-openmatters.org/">Open Matters Blog</a></li>
</ul>
</nav><!--about-->       <nav aria-labelledby="f-tools">         <span id="f-tools" class="footer" aria-hidden="true">Tools</span>
<ul class="foot-bullet" role="presentation">
    <li><a href="https://ocw.mit.edu/help/">Help &amp; FAQs</a></li>
    <li><a href="https://ocw.mit.edu/about/contactus">Contact Us</a></li>
    <li><a href="https://accessibility.mit.edu/" target="_blank">Accessibility</a></li>
    <li><a href="https://ocw.mit.edu/help/site-map/">Site Map</a></li>
    <li><a href="../../../common/terms/index.htm">Privacy &amp; Terms of Use</a></li>
    <li><a href="https://ocw.mit.edu/help/rss/">RSS Feeds</a></li>
</ul>
</nav><!--tools-->
</div>
</nav> <aside style="min-height: 289px;" aria-labelledby="f-our-corporate-supporters" class="grid_4 omega" id="foot-c5">           <span aria-hidden="true" class="footer" id="f-our-corporate-supporters">Our Corporate Supporters</span>           <!-- HOME_CORP_LOGO_1 -->
<div id="div-gpt-ad-1388181177156-0" class="sponsors_google_ads_even"><script type="text/javascript">
              googletag.cmd.push(function() { googletag.display('div-gpt-ad-1388181177156-0'); });
            </script></div>
<!-- HOME_CORP_LOGO_2 -->
<div id="div-gpt-ad-1388181177156-1" class="sponsors_google_ads_odd"><script type="text/javascript">
              googletag.cmd.push(function() { googletag.display('div-gpt-ad-1388181177156-1'); });
            </script></div>
<!-- HOME_CORP_LOGO_3 -->
<div id="div-gpt-ad-1388181177156-2" class="sponsors_google_ads_even"><script type="text/javascript">
              googletag.cmd.push(function() { googletag.display('div-gpt-ad-1388181177156-2'); });
            </script></div>
<!-- HOME_CORP_LOGO_4 -->
<div id="div-gpt-ad-1388181177156-3" class="sponsors_google_ads_odd"><script type="text/javascript">
              googletag.cmd.push(function() { googletag.display('div-gpt-ad-1388181177156-3'); });
            </script></div>
<!-- HOME_CORP_LOGO_5 -->
<div id="div-gpt-ad-1388181177156-4" class="sponsors_google_ads_even"><script type="text/javascript">
              googletag.cmd.push(function() { googletag.display('div-gpt-ad-1388181177156-4'); });
              </script></div>
<!-- HOME_CORP_LOGO_6 -->
<div id="div-gpt-ad-1388181177156-5" class="sponsors_google_ads_odd"><script type="text/javascript">
              googletag.cmd.push(function() { googletag.display('div-gpt-ad-1388181177156-5'); });
              </script></div>
</aside>
<div class="grid_12 alpha omega" itemprop="publisher" itemscope="" itemtype="http://schema.org/CollegeOrUniversity">
<h4 class="footer" style="border-top: thin solid #d5c9ba; padding-top: 10px; margin-bottom: 10px;">About <span itemprop="name">MIT OpenCourseWare</span>
</h4>
<p style="color: #999; font-size: 1em; line-height: 1.5em; margin-top: 10px;" itemprop="description">MIT OpenCourseWare is an online publication of materials from over 2,500 MIT courses, freely sharing knowledge with learners and educators around the world. <a href="https://ocw.mit.edu/about/">Learn more »</a></p>
</div>
<div id="foot-copy" class="grid_12 alpha omega" style="border-top: none;">
<a href="http://web.mit.edu"><img src="../../../common/images/logo_mit.png" alt="Massachusetts Institute of Technology logo and name." style="width: 195; height: 44;"></a><a href="https://openlearning.mit.edu/"><img src="https://ocw.mit.edu/images/mitol_logo.png" alt="MIT Open Learning logo and name." style="width: 265; height: 50; vertical-align: top; padding-left:30px;"></a><a href="https://www.oeglobal.org/"><img src="https://ocw.mit.edu/images/oeg_logo.gif" alt="Open Education Consortium logo." style="width: 219px; height: 59px; vertical-align: top; padding-left:20px;"></a><a rel="license" itemprop="useRightsUrl" href="http://creativecommons.org/licenses/by-nc-sa/4.0/"><img src="../../../common/images/cc_by-nc-sa.png" alt="Creative Commons logo with terms BY-NC-SA." style="width: 126px; height: 44px; margin-right: 0; padding-left: 20px;"></a>
<p class="copyright">© 2001–2018<br>
Massachusetts Institute of Technology</p>
<p style="font-size: 0.9em; margin-bottom: 15px;">Your use of the MIT OpenCourseWare site and materials is subject to our <a href="https://creativecommons.org/licenses/by-nc-sa/4.0/" rel="license">Creative Commons License</a> and other <a href="../../../common/terms/index.htm" rel="cc:morePermissions">terms of use</a>.</p>
</div>
</div></div>

</div>





                
			</div> <!-- bottom grid end -->
		</footer><!-- footer bottom end -->


   </body>
 </html>
